/*
This file is part of Vodka.

Vodka is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Vodka is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Vodka.  If not, see <https://www.gnu.org/licenses/>.
*/

// test: functions_basic_bindunique_tointeger
/*
This test verifies 'bind-unique' with a simple integer, incidentally this is also a good test for node reparenting in NexContainer, fixed a whole bunch of bugs related to that for this test. It binds pi to 3, creates two symbols, evals both, and verifies that after evaling the second one, the first one is gone and also gone correctly from the nex tree
*/

	// |Shift|~|b|i|n|d|-|u|n|i|q|u|e|Tab|Shift|@|p|i|Shift|#|3|Shift|Tab|Shift|Enter|Shift|@|p|i|;|Shift|@|p|i|ArrowLeft|ArrowLeft|Shift|Enter|ArrowRight|ArrowRight|Shift|Enter|ArrowLeft|ArrowLeft
	
var harness = require('../testharness');

var testactions = [];

testactions.push({
		type:'keydown',
		code:'ShiftRight'
	});
testactions.push({
		type:'keydown',
		code:'Backquote'
	});
testactions.push({
		type:'keyup',
		code:'Backquote'
	});
testactions.push({
		type:'keyup',
		code:'ShiftRight'
	});
testactions.push({
		type:'keydown',
		code:'KeyB'
	});
testactions.push({
		type:'keyup',
		code:'KeyB'
	});
testactions.push({
		type:'keydown',
		code:'KeyI'
	});
testactions.push({
		type:'keyup',
		code:'KeyI'
	});
testactions.push({
		type:'keydown',
		code:'KeyN'
	});
testactions.push({
		type:'keyup',
		code:'KeyN'
	});
testactions.push({
		type:'keydown',
		code:'KeyD'
	});
testactions.push({
		type:'keyup',
		code:'KeyD'
	});
testactions.push({
		type:'keydown',
		code:'Minus'
	});
testactions.push({
		type:'keyup',
		code:'Minus'
	});
testactions.push({
		type:'keydown',
		code:'KeyU'
	});
testactions.push({
		type:'keyup',
		code:'KeyU'
	});
testactions.push({
		type:'keydown',
		code:'KeyN'
	});
testactions.push({
		type:'keyup',
		code:'KeyN'
	});
testactions.push({
		type:'keydown',
		code:'KeyI'
	});
testactions.push({
		type:'keyup',
		code:'KeyI'
	});
testactions.push({
		type:'keydown',
		code:'KeyQ'
	});
testactions.push({
		type:'keyup',
		code:'KeyQ'
	});
testactions.push({
		type:'keydown',
		code:'KeyU'
	});
testactions.push({
		type:'keyup',
		code:'KeyU'
	});
testactions.push({
		type:'keydown',
		code:'KeyE'
	});
testactions.push({
		type:'keyup',
		code:'KeyE'
	});
testactions.push({
		type:'keydown',
		code:'Tab'
	});
testactions.push({
		type:'keyup',
		code:'Tab'
	});
testactions.push({
		type:'keydown',
		code:'ShiftRight'
	});
testactions.push({
		type:'keydown',
		code:'Digit2'
	});
testactions.push({
		type:'keyup',
		code:'Digit2'
	});
testactions.push({
		type:'keyup',
		code:'ShiftRight'
	});
testactions.push({
		type:'keydown',
		code:'KeyP'
	});
testactions.push({
		type:'keydown',
		code:'KeyI'
	});
testactions.push({
		type:'keyup',
		code:'KeyP'
	});
testactions.push({
		type:'keyup',
		code:'KeyI'
	});
testactions.push({
		type:'keydown',
		code:'ShiftRight'
	});
testactions.push({
		type:'keydown',
		code:'Digit3'
	});
testactions.push({
		type:'keyup',
		code:'Digit3'
	});
testactions.push({
		type:'keyup',
		code:'ShiftRight'
	});
testactions.push({
		type:'keydown',
		code:'Digit3'
	});
testactions.push({
		type:'keyup',
		code:'Digit3'
	});
testactions.push({
		type:'keydown',
		code:'ShiftRight'
	});
testactions.push({
		type:'keydown',
		code:'Tab'
	});
testactions.push({
		type:'keyup',
		code:'Tab'
	});
testactions.push({
		type:'keyup',
		code:'ShiftRight'
	});
testactions.push({
		type:'keydown',
		code:'ShiftLeft'
	});
testactions.push({
		type:'keydown',
		code:'Enter'
	});
testactions.push({
		type:'keyup',
		code:'Enter'
	});
testactions.push({
		type:'keyup',
		code:'ShiftLeft'
	});
testactions.push({
		type:'keydown',
		code:'ShiftRight'
	});
testactions.push({
		type:'keydown',
		code:'Digit2'
	});
testactions.push({
		type:'keyup',
		code:'Digit2'
	});
testactions.push({
		type:'keyup',
		code:'ShiftRight'
	});
testactions.push({
		type:'keydown',
		code:'KeyP'
	});
testactions.push({
		type:'keyup',
		code:'KeyP'
	});
testactions.push({
		type:'keydown',
		code:'KeyI'
	});
testactions.push({
		type:'keyup',
		code:'KeyI'
	});
testactions.push({
		type:'keydown',
		code:'Semicolon'
	});
testactions.push({
		type:'keyup',
		code:'Semicolon'
	});
testactions.push({
		type:'keydown',
		code:'ShiftRight'
	});
testactions.push({
		type:'keydown',
		code:'Digit2'
	});
testactions.push({
		type:'keyup',
		code:'Digit2'
	});
testactions.push({
		type:'keyup',
		code:'ShiftRight'
	});
testactions.push({
		type:'keydown',
		code:'KeyP'
	});
testactions.push({
		type:'keyup',
		code:'KeyP'
	});
testactions.push({
		type:'keydown',
		code:'KeyI'
	});
testactions.push({
		type:'keyup',
		code:'KeyI'
	});
testactions.push({
		type:'keydown',
		code:'ArrowLeft'
	});
testactions.push({
		type:'keyup',
		code:'ArrowLeft'
	});
testactions.push({
		type:'keydown',
		code:'ArrowLeft'
	});
testactions.push({
		type:'keyup',
		code:'ArrowLeft'
	});
testactions.push({
		type:'keydown',
		code:'ShiftLeft'
	});
testactions.push({
		type:'keydown',
		code:'Enter'
	});
testactions.push({
		type:'keyup',
		code:'Enter'
	});
testactions.push({
		type:'keyup',
		code:'ShiftLeft'
	});
testactions.push({
		type:'keydown',
		code:'ArrowRight'
	});
testactions.push({
		type:'keyup',
		code:'ArrowRight'
	});
testactions.push({
		type:'keydown',
		code:'ArrowRight'
	});
testactions.push({
		type:'keyup',
		code:'ArrowRight'
	});
testactions.push({
		type:'keydown',
		code:'ShiftLeft'
	});
testactions.push({
		type:'keydown',
		code:'Enter'
	});
testactions.push({
		type:'keyup',
		code:'Enter'
	});
testactions.push({
		type:'keyup',
		code:'ShiftLeft'
	});
testactions.push({
		type:'keydown',
		code:'ArrowLeft'
	});
testactions.push({
		type:'keyup',
		code:'ArrowLeft'
	});
testactions.push({
		type:'keydown',
		code:'ArrowLeft'
	});
testactions.push({
		type:'keyup',
		code:'ArrowLeft'
	});

harness.runTest(testactions, 'direct');
