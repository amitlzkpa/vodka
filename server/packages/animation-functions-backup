~"run"v( ~"import"h( @style-functions~) ~"import"h( @util-functions~) ~"bind"h( @top-mask-nex-by &" n amount"v( ~"let"h( @nexheight ~"get-pixel-height"h( @n~)~) ~"let"h( @nexwidth ~"get-pixel-width"h( @n~)~) ~"let"h( @maskheight ~"*"h( @amount @nexheight~)~) ~"let"h( @mask ~"background-color"h( ~"height"h( ~"width"h( () @nexwidth~) @maskheight~) $"#ffffff"~)~) ~"cons"h( @n ~"cons"h( @mask ~"make-zlist"h(~)~)~)&)~) ~"bind"h( @bottom-mask-nex-by &" n amount"v( ~"let"h( @nexheight ~"get-pixel-height"h( @n~)~) ~"let"h( @nexwidth ~"get-pixel-width"h( @n~)~) ~"let"h( @maskheight ~"*"h( @amount @nexheight~)~) ~"let"h( @mask ~"offset-y-by"h( ~"background-color"h( ~"height"h( ~"width"h( () @nexwidth~) @maskheight~) $"#ffffff"~) ~"-"h( @nexheight @maskheight~)~)~) ~"cons"h( @n ~"cons"h( @mask ~"make-zlist"h(~)~)~)&)~) ~"bind"h( @do-on-every &" f nex interval"v( ~"let"h( @exp ~"ff-with"h( ~"cons"h( @nex *(*)~) &" n"v( ~"set-delay"h( @exp @interval~) ~"f"h( @n~)&)~)~) ~"set-delay"h( @exp @interval~)&)~) ~"bind"h( @do-on-every-for &" f nex interval iterations"v( ~"let"h( @its #1~) ~"let"h( @exp ~"ff-with"h( ~"cons"h( @nex *(*)~) &" n"v( ~"if"v( ~"<"h( @its @iterations~) ~"begin"v( ~"set"h( @its ~"+"h( @its #1~)~) ~"set-delay"h( @exp @interval~)~) ^~) ~"f"h( @n~)&)~)~) ~"set-delay"h( @exp @interval~)&)~) ~"bind"h( @do-with-param-on-every &" f nex interval"v( ~"let"h( @p #0~) ~"let"h( @exp ~"ff-with"h( ~"cons"h( @nex *(*)~) &" n"v( ~"set-delay"h( @exp @interval~) ~"set"h( @p ~"+"h( @p #1~)~) ~"f"h( @n @p~)&)~)~) ~"set-delay"h( @exp @interval~)&)~) ~"bind"h( @fade-in &" nex duration-seconds"v( ~"let"h( @fps %22~) ~"let"h( @delay-ms ~"to-integer"h( ~"/"h( %1000 @fps~)~)~) ~"let"h( @num-frames ~"*"h( ~"to-float"h( @duration-seconds~) @fps~)~) ~"let"h( @increment ~"/"h( %1 @num-frames~)~) ~"let"h( @val %0~) ~"do-on-every-for"h( &" n"v( ~"set"h( @val ~"+"h( @val @increment~)~) ~"alpha"h( @n @val~)&) @nex @delay-ms @num-frames~)&)~) ~"bind"h( @fudge-interval &" interval"v( ~"to-integer"h( ~"*"h( ~"to-float"h( @interval~) ~"+"h( %.9 ~"*"h( %.2 ~"random"h(~)~)~)~)~)&)~) ~"bind"h( @random-background-color &" nex"v( ~"background-color"h( @nex ~"string-cat"v( $"rgb(" ~"to-string"h( ~"random-in-between"h( #0 #255~)~) $"," ~"to-string"h( ~"random-in-between"h( #0 #255~)~) $"," ~"to-string"h( ~"random-in-between"h( #0 #255~)~) $")"~)~)&)~) ~"bind"h( @cycle &" list interval"v( ~"let"h( @len ~"list-length"h( @list~)~) ~"do-with-param-on-every"h( &" n p"v( ~"let"h( @index ~"modulo"h( @p @len~)~) ~"select-nth-from-list"h( @index @list~)&) @list @interval~)&)~) ~"bind"h( @random-position-in-box &" width height nex"v( { [ ( |(R)| |(A)| |(N)| |(D)| |(O)| |(M)|) |(-)| ( |(P)| |(O)| |(S)| |(I)| |(T)| |(I)| |(O)| |(N)|) |(-)| ( |(I)| |(N)|) |(-)| ( |(B)| |(O)| |(X)|)] [ ( |(A)| |(d)| |(d)| |(s)|) |( )| ( |(a)|) |( )| ( |(r)| |(a)| |(n)| |(d)| |(o)| |(m)|) |( )| ( |(l)| |(e)| |(f)| |(t)|) |( )| ( |(a)| |(n)| |(d)|) |( )| ( |(t)| |(o)| |(p)|) |( )| ( |(p)| |(a)| |(d)| |(d)| |(i)| |(n)| |(g)|) |( )| ( |(t)| |(o)|) |( )| ( |(t)| |(h)| |(e)|) |( )| ( |(n)| |(e)| |(x)|)] [ |[&nbsp;]| ( |(s)| |(o)|) |( )| ( |(t)| |(h)| |(a)| |(t)|) |( )| ( |(i)| |(t)|) |( )| ( |(a)| |(p)| |(p)| |(e)| |(a)| |(r)| |(s)|) |( )| ( |(t)| |(o)|) |( )| ( |(s)| |(h)| |(o)| |(w)|) |( )| ( |(u)| |(p)|) |( )| ( |(a)| |(t)|) |( )| ( |(a)|) |( )| ( |(r)| |(a)| |(n)| |(d)| |(o)| |(m)|) |( )| ( |(p)| |(o)| |(s)| |(i)| |(t)| |(i)| |(o)| |(n)|)] [ |[&nbsp;]| ( |(i)| |(n)|) |( )| ( |(a)|) |( )| ( |(b)| |(o)| |(x)|)]} ~"let"h( @x ~"random-in-between"h( #0 @width~)~) ~"let"h( @y ~"random-in-between"h( #0 @height~)~) ~"padding-left"h( ~"padding-top"h( @nex @y~) @x~)&)~) ~"bind"h( @random-in-between &" start end"v( { [ ( |(R)| |(A)| |(N)| |(D)| |(O)| |(M)|) |(-)| ( |(I)| |(N)|) |(-)| ( |(B)| |(E)| |(T)| |(W)| |(E)| |(E)| |(N)|)] [ |[&nbsp;]| ( |(G)| |(e)| |(n)| |(e)| |(r)| |(a)| |(t)| |(e)| |(s)|) |( )| ( |(a)|) |( )| ( |(r)| |(a)| |(n)| |(d)| |(o)| |(m)|) |( )| ( |(i)| |(n)| |(t)| |(e)| |(g)| |(e)| |(r)|) |( )| ( |(b)| |(e)| |(t)| |(w)| |(e)| |(e)| |(n)|) |( )| ( |(t)| |(w)| |(o)|) |( )| ( |(v)| |(a)| |(l)| |(u)| |(e)| |(s)|)]} ~"to-integer"h( ~"+"h( @start ~"*"h( ~"random"h(~) ~"-"h( @end @start~)~)~)~)&)~) ~"bind"h( @choose-one-randomly &" lst"v( { [ ( |(C)| |(H)| |(O)| |(O)| |(S)| |(E)|) |(-)| ( |(O)| |(N)| |(E)|) |(-)| ( |(R)| |(A)| |(N)| |(D)| |(O)| |(M)| |(L)| |(Y)|)] [ |[&nbsp;]| ( |(c)| |(h)| |(o)| |(o)| |(s)| |(e)| |(s)|) |( )| ( |(a)|) |( )| ( |(r)| |(a)| |(n)| |(d)| |(o)| |(m)|) |( )| ( |(t)| |(h)| |(i)| |(n)| |(g)|) |( )| ( |(f)| |(r)| |(o)| |(m)|) |( )| ( |(t)| |(h)| |(e)|) |( )| ( |(l)| |(i)| |(s)| |(t)|)]} ~"let"h( @length ~"list-length"h( @lst~)~) ~"let"h( @n ~"to-integer"h( ~"*"h( @length ~"random"h(~)~)~)~) ~"select-nth-from-list"h( @n @lst~)&)~)~)