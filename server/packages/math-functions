~"package"v( @math ~"bind"h( @min &" a b"v( ~"if"v( ~"<"h( @a @b~) @a @b~)&)~) ~"bind"h( @max &" a b"v( ~"if"v( ~">"h( @a @b~) @a @b~)&)~) ~"bind"h( @hex-string-of &" n"v( ~"let"h( @map ( ( #10 $"a") ( #11 $"b") ( #12 $"c") ( #13 $"d") ( #14 $"e") ( #15 $"f"))~) ~"let"h( @get-val-for-key-from &" sought-key map"v( ~"if"v( ~"is-empty"h( @map~) ^ ~"begin"v( ~"let"h( @current-pair ~"car"h( @map~)~) ~"let"h( @current-key ~"car"h( @current-pair~)~) ~"if"v( ~"="h( @sought-key @current-key~) ~"car"h( ~"cdr"h( @current-pair~)~) ~"get-val-for-key-from"h( @sought-key ~"cdr"h( @map~)~)~)~)~)&)~) ~"let"h( @string-for-digit &" digit-in-decimal"v( ~"if"v( ~"<="h( @digit-in-decimal #9~) ~"to-string"h( @digit-in-decimal~) ~"get-val-for-key-from"h( @digit-in-decimal @map~)~)&)~) ~"let"h( @do-entire-number &" num"v( ~"let"h( @least-sig-digit ~"modulo"h( @num #16~)~) ~"let"h( @remaining ~"if"v( ~"="h( #0 ~"-"h( @num @least-sig-digit~)~) #0 ~"/"h( ~"-"h( @num @least-sig-digit~) #16~)~)~) ~"string-cat"v( ~"if"v( ~"="h( #0 @remaining~) $"" ~"do-entire-number"h( @remaining~)~) ~"string-for-digit"h( @least-sig-digit~)~)&)~) ~"do-entire-number"h( @n~)&)~)~)